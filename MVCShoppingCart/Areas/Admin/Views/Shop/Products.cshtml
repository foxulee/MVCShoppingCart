@model IEnumerable<MVCShoppingCart.Models.ViewModels.Shop.ProductViewModel>

@{
    ViewBag.Title = "Products";
}

@using PagedList.Mvc;
@using PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />


<h2>Products</h2>

<select id="SelectCategory" name="SelectCategory">
    <option value="0">All</option>
    @foreach (var item in ViewBag.Categories)
    {
        if (ViewBag.SelectedCategory == item.Value)
        {
            <option selected="selected" value="@item.Value">@item.Text</option>
        }
        else
        {
            <option value="@item.Value">@item.Text</option>
        }
    }
</select>
<br /><br />

<p>
    @Html.ActionLink("Add New Product", "AddProduct")
</p>

<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Description
        </th>
        <th>
            Price
        </th>
        <th>
            Image Name
        </th>
        <th></th>
    </tr>

    @foreach (var product in ViewBag.OnePageOfProducts)
    {
        <tr>
            <td>
                @product.Name
            </td>
            <td>
                @product.Description
            </td>
            <td>
                $@product.Price
            </td>
            <td>
                <a href="/admin/shop/EditProduct/@product.Id">
                    <img src="/Images/Uploads/Products/@product.Id/Thumbs/@product.ImageName" />
                </a>
            </td>
            <td>
                @Html.ActionLink("Edit", "EditProduct", new { id = product.Id }) |
                @Html.ActionLink("Delete", "DeleteProduct", new { id = product.Id }, new { @class = "delete" })
            </td>
        </tr>
    }
</table>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Products", new { page, categoryId = ViewBag.SelectedCategory }))

@section scripts{
    <script src="http://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
        $(function () {
            /*
             * Select products from specified category
             */

            $("#SelectCategory").on("change", function () {
                var selectedCatId = $(this).val();

                if (selectedCatId) {
                    window.location = "/admin/shop/Products?categoryId=" + selectedCatId;
                }

                return false;
            });

            //////////////////////////////////////////////////////////////

            
            /*
            * Confirm product deletion
            */

            $("a.delete").click(function () {
                if (!confirm("Confirm product deletion"))
                    return false;
            });

            //////////////////////////////////////////////////////////////
        })
    </script>
}